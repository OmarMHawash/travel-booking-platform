version: "3.9"

services:
  travel-bp-api:
    container_name: travel-bp-api
    build:
      context: ./apps/api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - "ConnectionStrings__DefaultConnection=Server=sql-server-db;Database=TravelBookingPlatform;User Id=sa;Password=Aa@1231Bb!;TrustServerCertificate=True;"
      - "ConnectionStrings__SerilogConnection=Server=sql-server-db;Database=master;User Id=sa;Password=Aa@1231Bb!;TrustServerCertificate=True;"
    depends_on:
      sql-server-db:
        condition: service_healthy
    networks:
      - travel-network
    restart: unless-stopped

  travel-bp-docs:
    container_name: travel-bp-docs
    build:
      context: ./apps/docs
    environment:
      - NODE_ENV=production
    networks:
      - travel-network
    restart: unless-stopped

  travel-bp-client:
    container_name: travel-bp-client
    build:
      context: ./apps/client
    environment:
      - NODE_ENV=production
    networks:
      - travel-network
    restart: unless-stopped

  sql-server-db:
    container_name: sql-server-db
    build:
      context: ./apps/api/docker/sql-server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Aa@1231Bb!
    volumes:
      - sql-server-data:/var/opt/mssql
    networks:
      - travel-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-C",
          "-S",
          "localhost",
          "-U",
          "sa",
          "-P",
          "Aa@1231Bb!",
          "-Q",
          "SELECT 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  travel-network:
    driver: bridge

volumes:
  sql-server-data:
    driver: local
