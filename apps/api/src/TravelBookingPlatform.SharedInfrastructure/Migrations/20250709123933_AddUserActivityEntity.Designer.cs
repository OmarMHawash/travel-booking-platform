// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBookingPlatform.SharedInfrastructure.Persistence;

#nullable disable

namespace OmarHawash.TravelBookingPlatform.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250709123933_AddUserActivityEntity")]
    partial class AddUserActivityEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CheckInDate")
                        .HasDatabaseName("IX_Booking_CheckInDate");

                    b.HasIndex("CheckOutDate")
                        .HasDatabaseName("IX_Booking_CheckOutDate");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("IX_Booking_RoomId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Booking_UserId");

                    b.HasIndex("UserId", "CheckInDate")
                        .HasDatabaseName("IX_Booking_User_CheckIn");

                    b.HasIndex("RoomId", "CheckInDate", "CheckOutDate")
                        .HasDatabaseName("IX_Booking_Room_Dates");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_City_Name_Unique");

                    b.HasIndex("PostCode")
                        .IsUnique()
                        .HasDatabaseName("IX_City_PostCode_Unique");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Deal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentBookings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<int>("MaxBookings")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId")
                        .HasDatabaseName("IX_Deal_HotelId");

                    b.HasIndex("RoomTypeId")
                        .HasDatabaseName("IX_Deal_RoomTypeId");

                    b.HasIndex("HotelId", "Title")
                        .IsUnique()
                        .HasDatabaseName("IX_Deal_Hotel_Title_Unique")
                        .HasFilter("[IsActive] = 1");

                    b.HasIndex("IsActive", "ValidTo")
                        .HasDatabaseName("IX_Deal_Active_ValidTo");

                    b.HasIndex("IsFeatured", "IsActive", "ValidTo")
                        .HasDatabaseName("IX_Deal_Featured_Active_ValidTo");

                    b.HasIndex("HotelId", "RoomTypeId", "ValidFrom", "ValidTo")
                        .IsUnique()
                        .HasDatabaseName("IX_Deal_Hotel_RoomType_DateRange_Unique")
                        .HasFilter("[IsActive] = 1");

                    b.ToTable("Deal", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .HasDatabaseName("IX_Hotel_CityId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Hotel_Name_Unique");

                    b.HasIndex("Rating")
                        .HasDatabaseName("IX_Hotel_Rating");

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId")
                        .HasDatabaseName("IX_Room_HotelId");

                    b.HasIndex("RoomNumber")
                        .HasDatabaseName("IX_Room_RoomNumber");

                    b.HasIndex("RoomTypeId")
                        .HasDatabaseName("IX_Room_RoomTypeId");

                    b.HasIndex("HotelId", "RoomNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Room_HotelId_RoomNumber_Unique");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAdults")
                        .HasColumnType("int");

                    b.Property<int>("MaxChildren")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_RoomType_Name_Unique");

                    b.HasIndex("PricePerNight")
                        .HasDatabaseName("IX_RoomType_PricePerNight");

                    b.HasIndex("MaxAdults", "MaxChildren")
                        .HasDatabaseName("IX_RoomType_Capacity");

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Identity.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Identity.Domain.Entities.UserActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metadata")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("TargetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityDate")
                        .HasDatabaseName("IX_UserActivities_ActivityDate");

                    b.HasIndex("UserId", "TargetType", "ActivityDate")
                        .HasDatabaseName("IX_UserActivities_User_TargetType_Date");

                    b.HasIndex("UserId", "Type", "ActivityDate")
                        .HasDatabaseName("IX_UserActivities_User_Type_Date");

                    b.HasIndex("UserId", "TargetId", "TargetType", "Type")
                        .HasDatabaseName("IX_UserActivities_User_Target_Type");

                    b.ToTable("UserActivities", (string)null);
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Booking", b =>
                {
                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Deal", b =>
                {
                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Hotel", b =>
                {
                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Room", b =>
                {
                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBookingPlatform.Modules.Hotels.Domain.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Identity.Domain.Entities.User", b =>
                {
                    b.OwnsOne("TravelBookingPlatform.Modules.Identity.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("UserId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Identity.Domain.Entities.UserActivity", b =>
                {
                    b.HasOne("TravelBookingPlatform.Modules.Identity.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelBookingPlatform.Modules.Hotels.Domain.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
